name: CI/CD Docker

on:
  push:
    branches: [ master ]
  pull_request:
    branches: [ master ]

jobs:
  build:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Build Docker image
        run: docker build -t movieflix-api:latest ./api

      - name: Push image to Docker Hub
        if: github.event_name == 'push' && github.ref == 'refs/heads/master'
        uses: docker/login-action@v2
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}

      - name: Tag and push image
        if: github.event_name == 'push' && github.ref == 'refs/heads/master'
        run: |
          docker tag movieflix-api:latest ${{ secrets.DOCKERHUB_USERNAME }}/movieflix-api:latest
          docker push ${{ secrets.DOCKERHUB_USERNAME }}/movieflix-api:latest

      - name: Start containers and load data
        run: |
          # Let docker compose (CLI plugin) manage both db and api (ports and mounts are defined in docker-compose.yml)
          docker compose up -d db api

          # Wait for Postgres to be ready before running the loader
          echo "Waiting for Postgres to accept connections..."
          for i in {1..20}; do
            docker compose exec -T db pg_isready -U movieuser -d moviedb && break || true
            echo "Postgres not ready ($i/20), sleeping 2s..."
            sleep 2
          done

          # Run the CSV loader inside the api container
          docker compose exec -T api python /app/load_csv_data.py

      - name: Test API health
        run: |
          # Simple retry loop against the docs endpoint
          for i in {1..8}; do
            if curl --fail http://localhost:8000/docs; then echo "API is up"; exit 0; fi
            echo "Waiting for API... $i/8"; sleep 3
          done
          docker compose logs api || true
          exit 1

      - name: Stop and clean up containers
        if: always()
        run: |
          docker compose down -v

